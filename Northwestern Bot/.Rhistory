library(shiny)
twitter_bot <- function(x){
# Get Game ID
game_id <- ifelse(!is_empty(cfbscrapR::cfb_game_media(2020, team = "Northwestern") %>%
mutate(date = lubridate::date(start_time),
start = lubridate::hour(lubridate::ymd_hms(start_time, tz = "EST")),
now = ifelse(Sys.Date() == date & lubridate::hour(Sys.time()) >= start & lubridate::hour(Sys.time()) <= start+5, 1, 0)) %>%
filter(now == 1) %>%
pull(game_id)),
cfbscrapR::cfb_game_media(2020, team = "Northwestern") %>%
mutate(date = lubridate::date(start_time),
start = lubridate::hour(lubridate::ymd_hms(start_time, tz = "EST")),
now = ifelse(Sys.Date() == date & lubridate::hour(Sys.time()) >= start & lubridate::hour(Sys.time()) <= start+5, 1, 0)) %>%
filter(now == 1) %>%
pull(game_id),
NA)
pbp <- httr::GET(url = glue::glue("http://site.api.espn.com/apis/site/v2/sports/football/college-football/summary?event={game_id}")) %>%
httr::content(as = "text", encoding = "UTF-8") %>%
jsonlite::fromJSON(flatten = TRUE)
message("JSON Done")
### Pull Raw Plays from the pbp
#Previous Only
if(is.null(pbp[["drives"]][["current"]]) & !is.null(pbp[["drives"]][["previous"]])){plays_raw <- pbp[["drives"]][["previous"]] %>%
dplyr::select(team.name, plays, id) %>%
rename(drive = id) %>%
unnest(plays, names_repair = "unique") %>%
janitor::clean_names()
message("Plays Done")
}
# Previous and Current
if(!is.null(pbp[["drives"]][["current"]]) & !is.null(pbp[["drives"]][["previous"]])){plays_raw <- pbp[["drives"]][["previous"]] %>%
dplyr::select(team.name, plays, id) %>%
rename(drive = id) %>%
unnest(plays, names_repair = "unique") %>%
janitor::clean_names()
message("Plays Done")
}
if(is.null(pbp[["drives"]][["current"]]) & is.null(pbp[["drives"]][["previous"]])){plays_raw <- as_tibble()}
if(nrow(plays_raw) > 0){plays <- plays_raw %>%
mutate(
home_team = pbp[["boxscore"]][["teams"]][["team.name"]][2],
away_team = pbp[["boxscore"]][["teams"]][["team.name"]][1],
home_timeout = ifelse(type_text == "Timeout" & str_detect(text, pattern = toupper(pbp[["boxscore"]][["teams"]][["team.name"]][2])) == TRUE, 1, 0),
away_timeout = ifelse(type_text == "Timeout" & str_detect(text, pattern = toupper(pbp[["boxscore"]][["teams"]][["team.name"]][2])) == FALSE, 1, 0),
roof = "outdoors",
posteam = team_name,
defteam = ifelse(home_team == posteam, away_team, home_team),
game_id = game_id,
receive_first_half = pbp[["drives"]][["previous"]][["team.name"]][[1]],
receive_2h_ko = ifelse(posteam == receive_first_half, 0, 1),
score_differential = ifelse(posteam == home_team, home_score-away_score, away_score-home_score),
game_seconds_remaining = ifelse(period_number > 2, lubridate::period_to_seconds(lubridate::ms(clock_display_value))+ifelse(period_number == 1| period_number == 3, 900, 0), 1800 + lubridate::period_to_seconds(lubridate::ms(clock_display_value))+ifelse(period_number == 1| period_number == 3, 900, 0)),
half_seconds_remaining = lubridate::period_to_seconds(lubridate::ms(clock_display_value))+ifelse(period_number == 1| period_number == 3, 900, 0),
season = 2020,
timeout = ifelse(type_text == "Timeout", 1, 0),
posteam_timeouts_remaining = 3,
defteam_timeouts_remaining = 3,
) %>%
dplyr::rename(
period = period_number,
yardline_100 = end_yards_to_endzone,
down = end_down,
ydstogo = end_distance
) %>%
mutate(
pass = if_else(type_text == "Pass Reception" | type_text == "Passing Touchdown" |
type_text == "Sack" | type_text == "Pass Interception Return" |
type_text == "Pass Incompletion" | type_text == "Sack Touchdown" |
(type_text == "Safety" & str_detect(text, "sacked")) |
(type_text == "Fumble Recovery (Own)" & str_detect(text, "pass")) |
(type_text == "Fumble Recovery (Opponent)" & str_detect(text, "pass")), 1, 0),
rush = ifelse(type_text == "Rush" | type_text == "Rushing Touchdown" | (type_text == "Safety" & str_detect(text, "run")) |
(type_text == "Fumble Recovery (Opponent)" & str_detect(text, "run")) |
(type_text == "Fumble Recovery (Own)" & str_detect(text, "run")), 1, 0),
Reception = ifelse(type_text == "Pass Reception" | type_text == "Passing Touchdown", 1, 0),
Touchdown = ifelse(type_text == "Passing Touchdown" | type_text == "Rushing Touchdown", 1, 0),
Pass_Attempt = ifelse(type_text == "Pass Reception" | type_text == "Pass Incompletion" | type_text == "Passing Touchdown" |
type_text == "Pass Interception Return", 1, 0),
Completion = ifelse(type_text == "Pass Reception" | type_text == "Passing Touchdown", 1, 0),
text = gsub("Team ", "Team QB ", text),
text = gsub("N/A ", "N/ A ", text),
text = gsub(" III", "", text),
text = gsub(" II", "", text),
text = gsub(" Jr.", "", text),
text = gsub(" Sr.", "", text),
text = gsub(" IV", "", text),
text = gsub(" V ", "", text),
Passer = NA,
Receiver = NA,
Rusher = NA,
Passer = ifelse(pass == 1,
gsub(",","", word(text, 1,2, sep=" ")),
Passer),
Passer = ifelse(pass == 1 & type_text == "Passing Touchdown" & str_detect(text, "from"),
gsub(",","", word(text, 7,8, sep=" ")),
Passer),
Receiver = ifelse(pass == 1 & type_text == "Passing Touchdown",
gsub(",","", word(text, 1,2, sep=" ")),
Receiver),
Receiver = ifelse(pass == 1 & str_detect(text, "complete") | pass == 1 & str_detect(text, "incomplete"),
gsub(",","", word(text, 6,7, sep=" ")),
Receiver),
Rusher = ifelse(rush == 1,
gsub(",","", word(text, 1,2, sep=" ")),
Rusher),
Receiver = ifelse(str_detect(text, "incomplete") == TRUE & str_detect(text, fixed('penalty', ignore_case=TRUE)) == TRUE, NA, Receiver)) %>%
nflfastR::calculate_expected_points() %>%
mutate(epa = case_when(
scoring_type_abbreviation == "TD" ~ 6.89-ep,
is.na(scoring_type_abbreviation) & type_text != "Punt" & type_text != "End of Half" ~ lead(ep)-ep,
type_text == "Punt" ~ 0-ep,
scoring_type_abbreviation == "FG" ~ 3-ep,
type_text == "End of Half" & scoring_type_abbreviation != "FG" | scoring_type_abbreviation != "TD"~ 0
),
success = ifelse(epa > 0, 1, 0)) %>%
### Add WP
left_join(
pbp[["winprobability"]] %>% as_tibble(),
by = c("id" = "playId")
) %>%
mutate(
homeWinPercentage = lag(homeWinPercentage),
home_wpa = round(lead(homeWinPercentage)-homeWinPercentage, 6),
wp = ifelse(posteam == home_team, homeWinPercentage, 1-homeWinPercentage),
) %>%
## Add Colors
left_join(
teamcolors::teamcolors %>% filter(league == "ncaa", location == pbp[["boxscore"]][["teams"]][["team.location"]][1] | location == pbp[["boxscore"]][["teams"]][["team.location"]][2]) %>% select(mascot, logo),
by = c("posteam" = "mascot")
)
### Load Tables
team_stats <- create_tables(plays = plays, table_type = "team")
player_stats <- create_tables(plays = plays, table_type = "player")
message("Graphs Done")
### Tweets
tweet_material <- plays %>% mutate(old = ifelse(id %in% old_data$id, 1, 0)) %>%
filter(old == 0 &
old == 0 & type_text == "End Period" |
old == 0 & type_text == "End of Half" |
old == 0 & type_text == "End of Game" |
old == 0 &  home_wpa >= .04 | old == 0 & home_wpa <= -.04) %>%
mutate(text = ifelse(str_detect(text, "PENALTY") == TRUE, gsub(".*PENALTY ","",text), text),
text = ifelse(str_detect(text, "fumbled") == TRUE, gsub(".*fumbled,","Fumble",text), text),
home_wpa = ifelse(is.na(home_wpa), 0, home_wpa))
if(nrow(tweet_material) > 0){
purrr::map(1:nrow(tweet_material), function(x){
# Tweet Quarter Recap
if(tweet_material$type_text[x] == "End Period" | tweet_material$type_text[x] == "End of Half" | tweet_material$type_text[x] == "End of Game"){
rtweet::post_tweet(
status = paste(paste0("At the end of the ", tweet_material$period[x], case_when(tweet_material$period[x] == 1 ~ "st, ",
tweet_material$period[x] == 2 ~ "nd, ",
tweet_material$period[x] == 3 ~ "rd, ",
tweet_material$period[x] == 4 ~ "th, "), "Northwestern is"), paste0(
ifelse("Wildcats" == tweet_material$home_team[x],
ifelse(
tweet_material$home_score[x] == tweet_material$away_score[x],
paste("tied", tweet_material$home_score[x], "to", tweet_material$away_score[x]),
ifelse(
tweet_material$home_score[x] > tweet_material$away_score[x],
paste("up", tweet_material$home_score[x], "to", tweet_material$away_score[x]),
paste("down", tweet_material$home_score[x], "to", tweet_material$away_score[x])
)
)
,
ifelse(
tweet_material$home_score[x] == tweet_material$away_score[x],
paste("tied", tweet_material$away_score[x], "to", tweet_material$home_score[x]),
ifelse(
tweet_material$home_score[x] < tweet_material$away_score[x],
paste("up", tweet_material$away_score[x], "to", tweet_material$home_score[x]),
paste("down", tweet_material$away_score[x], "to", tweet_material$home_score[x]))
))), case_when(tweet_material$type_text[x] != "End of Game" ~ "| See the performance so far:", tweet_material$type_text[x] == "End of Game" ~ "| See the final stats:")),
media = c("/Users/jonathangoldberg/Google Drive/Random/Sports/Data Twitter Account/College Football/Live NU/player_summary.png", "/Users/jonathangoldberg/Google Drive/Random/Sports/Data Twitter Account/College Football/Live NU/team_summary.png"))}
# Key Play
if(tweet_material$home_wpa[x] >= .04 | tweet_material$home_wpa[x] <= -.04){
rtweet::post_tweet(
status = paste(paste0("Key Play: ", tweet_material$home_wpa[x]*100, "% win probability shift ", ifelse(tweet_material$home_wpa[x] > 0, "for the", "against the"), " ",
tweet_material$home_team[x],". ", tweet_material$text[x], ".",
paste(paste0(" Northwestern is"), paste0(
ifelse("Wildcats" == tweet_material$home_team[x],
ifelse(
tweet_material$home_score[x] == tweet_material$away_score[x],
paste("Tied", tweet_material$home_score[x], "to", tweet_material$away_score[x]),
ifelse(
tweet_material$home_score[x] > tweet_material$away_score[x],
paste("Up", tweet_material$home_score[x], "to", tweet_material$away_score[x]),
paste("Down", tweet_material$home_score[x], "to", tweet_material$away_score[x])
)
)
,
ifelse(
tweet_material$home_score[x] == tweet_material$away_score[x],
paste("Tied", tweet_material$away_score[x], "to", tweet_material$home_score[x]),
ifelse(
tweet_material$home_score[x] < tweet_material$away_score[x],
paste("Up", tweet_material$away_score[x], "to", tweet_material$home_score[x]),
paste("Down", tweet_material$away_score[x], "to", tweet_material$home_score[x]))
))), "with", tweet_material$clock_display_value[x], "left in the",
paste0(tweet_material$period[x],
case_when(tweet_material$period[x] == 1 ~ "st.",
tweet_material$period[x] == 2 ~ "nd.",
tweet_material$period[x] == 3 ~ "rd.",
tweet_material$period[x] == 4 ~ "th."))) ))
)}
})
}
### Set Old Plays
old_data <- plays
message("Plays Stored")
}
###
Sys.sleep(90)
}
source('~/Google Drive/Random/Sports/Data Twitter Account/Random/Northwestern Bot/To Load.R', echo=TRUE)
runApp()
?selectInput
source('~/Google Drive/Random/Sports/Data Twitter Account/Random/Northwestern Bot/To Load.R', echo=TRUE)
runApp()
source('~/Google Drive/Random/Sports/Data Twitter Account/Random/Northwestern Bot/To Load.R', echo=TRUE)
runApp()
runApp()
runApp()
runApp()
source('~/Google Drive/Random/Sports/Data Twitter Account/Random/Northwestern Bot/To Load.R', echo=TRUE)
runApp()
runApp()
runApp()
source('~/Google Drive/Random/Sports/Data Twitter Account/Random/Northwestern Bot/To Load.R', echo=TRUE)
runApp()
runApp()
?renderPrint
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
